name:  $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)  

trigger:
- master

variables:
  Tf.Statefile : $(System.TeamProject)_$(Build.DefinitionName)_$(Build.Repository.Name)_$(Build.SourceBranchName)_terraform.tfstate
  Subscription : MSDN Enterprise
stages:
- stage: Build
  displayName: 'build artifact'
  jobs:
  - job: Build
    displayName: 'Create build artifact'
    pool:
      vmImage: 'windows-latest'
    steps:
    - publish: $(System.DefaultWorkingDirectory)
      artifact: build

- stage: Release  
  variables:
   - group: dev-variables
  displayName: 'deploy dev artifact'
  jobs:
  - job: Deploy_dev
    displayName: 'dev'
    environment: 'dev'
    pool:
      vmImage: 'windows-latest'
    steps:
    
    - download: current
      artifact: build

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: 'gci $(System.ArtifactsDirectory) -recurse'

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      displayName: 'Install Terraform 0.12.23'
      inputs:
        terraformVersion: 0.12.23

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
      displayName: 'Terraform init'
      inputs:
        workingDirectory: $(Build.SourcesDirectory)
        backendServiceArm: '$(Subscription)'
        backendAzureRmResourceGroupName: $(Tf.ResourceGroup)
        backendAzureRmStorageAccountName: $(Tf.StorageAccount)
        backendAzureRmContainerName: $(Tf.Container)
        backendAzureRmKey: $(Tf.Statefile)